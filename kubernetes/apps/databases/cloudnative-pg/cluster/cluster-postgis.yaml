---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgis
spec:
  instances: 1
  imageName: ghcr.io/cloudnative-pg/postgis:17-3.5
  storage:
    size: 5Gi
    storageClass: openebs-hostpath
  superuserSecret:
    name: cloudnative-pg-secret
  enableSuperuserAccess: true
  primaryUpdateMethod: switchover
  bootstrap:
    initdb:
      postInitTemplateSQL:
        - CREATE EXTENSION postgis;
        - CREATE EXTENSION postgis_topology;
        - CREATE EXTENSION fuzzystrmatch;
        - CREATE EXTENSION postgis_tiger_geocoder;
  # Note: Bootstrap is needed when recovering from an existing cnpg cluster
    # recovery:
    #   source: &previousCluster postgis-v1
  postgresql:
    parameters:
      max_connections: "300"
      max_slot_wal_keep_size: 2GB
      shared_buffers: 256MB
  nodeMaintenanceWindow:
    inProgress: false
    reusePVC: true
  resources:
    requests:
      cpu: 250m
      memory: 256Mi
    limits:
      memory: 512Mi
  monitoring:
    enablePodMonitor: true
  plugins:
  - name: barman-cloud.cloudnative-pg.io
    isWALArchiver: true
    parameters:
      barmanObjectName: postgis
      serverName: postgis-v1

  # externalClusters:
  # - name: *previousCluster
  #   plugin:
  #     name: barman-cloud.cloudnative-pg.io
  #     parameters:
  #       barmanObjectName: postgis
  #       serverName: *previousCluster
