---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: plex
  namespace: default
spec:
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    controller:
      type: statefulset

    image:
      repository: ghcr.io/onedr0p/plex
      tag: 1.32.7.7621-871adbd44@sha256:f9f77dc5e17cab9fae5ece663a64d026e3c75142b3b60bb4a52bf061957412be
    env:
      TZ: "${TZ}"

    service:
      main:
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: ${SVC_PLEX_ADDR}
        externalTrafficPolicy: Cluster
        ports:
          http:
            port: 32400

    ingress:
      main:
        enabled: true
        primary: true
        ingressClassName: traefik
        annotations:
          external-dns.alpha.kubernetes.io/target: ipv4.${SECRET_DOMAIN}
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: >-
            networking-headers@kubernetescrd
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: ${SECRET_CERT_NAME}-prod-tls

    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 100Gi
        storageClass: longhorn

    persistence:
      media:
        enabled: true
        type: nfs
        server: ${NAS_ADDR}
        path: ${MEDIADIR}
        mountPath: /media
        readOnly: true
      photos:
        enabled: true
        type: nfs
        server: ${NAS_ADDR}
        path: /tank/photos
        mountPath: /photos
        readOnly: true
      transcode:
        enabled: true
        type: emptyDir

    podSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
      # Hardware acceleration using an Intel iGPU w/ QuickSync
      # These IDs below should be matched to your `video` and `render` group on the host
      # To obtain those IDs run the following grep statement on the host:
      # $ cat /etc/group | grep "video\|render"
      # video:x:44:
      # render:x:109:
      supplementalGroups:
      - 44
      - 105

    resources:
      requests:
        gpu.intel.com/i915: 1
        cpu: 8m
        memory: 2206M
      limits:
        gpu.intel.com/i915: 1
        memory: 4206M

    nodeSelector:
      intel.feature.node.kubernetes.io/gpu: "true"

    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                    - nuc
                    - morefine
