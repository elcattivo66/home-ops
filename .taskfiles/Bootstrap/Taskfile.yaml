---
version: '3'

tasks:

  talos:
    desc: Bootstrap Talos
    prompt: Bootstrap Talos ...?
    cmds:
      - until talosctl --nodes {{.TALOS_CONTROLLER}} bootstrap; do sleep 10; done
      - talosctl kubeconfig --nodes {{.TALOS_CONTROLLER}} --force {{.K8S_CLUSTER_DIR}}
    vars:
      TALOS_CONTROLLER:
        sh: talosctl config info --output json | jq --raw-output '.endpoints[]' | shuf -n 1
    preconditions:
      - talosctl config info
      - which talosctl

  apps:
    desc: Bootstrap Kubernetes Apps
    prompt: Bootstrap Kubernetes Apps ...?
    cmds:
      - until kubectl wait nodes --for=condition=Ready=False --all --timeout=10m; do sleep 5; done
      - sops --decrypt {{.K8S_CLUSTER_DIR}}/bootstrap/age-key.sops.yaml | kubectl apply --server-side --filename -
      - sops --decrypt {{.K8S_CLUSTER_DIR}}/bootstrap/github-deploy-key.sops.yaml | kubectl apply --server-side --filename -
      - helmfile --quiet --file {{.K8S_CLUSTER_DIR}}/bootstrap/helmfile.yaml apply --skip-diff-on-install --suppress-diff
    env:
      FLUX_GITHUB_PUBLIC_KEYS:
        sh: curl -fsSL https://api.github.com/meta | jq --raw-output '"github.com "+.ssh_keys[]'
      MODEL: '{{.MODEL}}'
      NODE_COUNT:
        sh: talosctl config info --output json | jq --raw-output '.nodes | length'
      VAULT: K8s
    preconditions:
      - talosctl config info
      - test -f {{.ROOT_DIR}}/age.key
      - test -f {{.K8S_CLUSTER_DIR}}/bootstrap/age-key.sops.yaml
      - test -f {{.K8S_CLUSTER_DIR}}/bootstrap/github-deploy-key.sops.yaml
      - test -f {{.K8S_CLUSTER_DIR}}/bootstrap/helmfile.yaml
      - which curl jq helmfile kubectl op talosctl
