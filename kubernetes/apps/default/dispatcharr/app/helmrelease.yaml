---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: dispatcharr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  values:
    controllers:
      dispatcharr:
        # initContainers:
        #   init-db:
        #     image:
        #       repository: ghcr.io/home-operations/postgres-init
        #       tag: 17
        #     env:
        #       TZ: ${TZ}
        #     envFrom: &envFrom
        #       - secretRef:
        #           name: dispatcharr-secret
        pod:
          hostUsers: false
        containers:
          app:
            image:
              repository: ghcr.io/dispatcharr/dispatcharr
              tag: 0.11.1@sha256:894aa15b61a45d3238a66dc06411e684ced0d687453a5be21d10a81b12e476a3
            env:
              CELERY_BROKER_URL: &celery_broker redis://dragonfly.databases.svc.cluster.local:6379/9
              DISPATCHARR_ENV: aio
              DISPATCHARR_LOG_LEVEL: info
              DISPATCHARR_PORT: &port 9191
              REDIS_HOST: &redis dragonfly.databases.svc.cluster.local
              REDIS_DB: 9
            # envFrom: *envFrom
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 3Gi
                gpu.intel.com/i915: 1

          # celery:
          #   image:
          #     repository: ghcr.io/dispatcharr/dispatcharr
          #     tag: 0.11.1@sha256:894aa15b61a45d3238a66dc06411e684ced0d687453a5be21d10a81b12e476a3
          #   args: >
          #     bash -c "
          #     cd /app &&
          #     nice -n 5 celery -A dispatcharr worker -l info
          #     "
          #   env:
          #     CELERY_BROKER_URL: *celery_broker
          #     DISPATCHARR_LOG_LEVEL: info
          #     REDIS_HOST: *redis
          #   envFrom: *envFrom
          #   resources:
          #     requests:
          #       cpu: 100m
          #     limits:
          #       memory: 500Mi
    service:
      app:
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      data:
        existingClaim: dispatcharr
        advancedMounts:
          dispatcharr:
            app:
              - path: /data
                subPath: data
      tmpfs:
        type: emptyDir
        advancedMounts:
          dispatcharr:
            app:
              - path: /tmp
                subPath: tmp
            # celery:
            #   - path: /tmp
            #     subPath: tmp
