---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app kyoo
spec:
  interval: 15m
  chart:
    spec:
      chart: kyoo
      version: 4.7.1
      sourceRef:
        kind: HelmRepository
        name: zoriya
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      strategy: rollback
      retries: 3
  values:
    global:
      meilisearch:
        infra:
          existingSecret: &secret kyoo-secret
        kyoo_back:
          masterkeyKey: MEILI_MASTER_KEY
          existingSecret: *secret
      postgres:
        infra:
          user: kyoo-all
        kyoo_back:
          host: &host postgres16-rw.databases.svc.cluster.local
          kyoo_migrations: &psql
            userKey: POSTGRES_USER
            passwordKey: POSTGRES_PASSWORD
            existingSecret: *secret
          kyoo_back: *psql
        kyoo_transcoder:
          host: *host
          database: kyoo_transcoder
          sslmode: require
          kyoo_transcoder: *psql
      rabbitmq:
        infra:
          passwordKey: RABBITMQ_PASS
          keyErlangCookie: RABBITMQ_COOKIE
          existingSecret: *secret
        kyoo_autosync: &rabbit
          userKey: RABBITMQ_USER
          passwordKey: RABBITMQ_PASS
          existingSecret: *secret
        kyoo_back: *rabbit
        kyoo_matcher: *rabbit
        kyoo_scanner: *rabbit

    kyoo:
      address: https://kyoo.${SECRET_DOMAIN}
      libraryIgnorePattern: ".*/([dD]ownloads?|audiobooks|documentaries|e-classes|ebooks|fitness_videos|music)/.*"
      transcoderAcceleration: vaapi # hardware acceleration profile (valid values: disabled, vaapi, qsv, nvidia)
      apikey:
        existingSecret: *secret
        apikeyKey: KYOO_API_KEY
      oidc_providers:
        - name: Authelia
          existingSecret: *secret
          clientIdKey: OIDC_AUTHELIA_CLIENTID
          clientSecretKey: OIDC_AUTHELIA_SECRET
          logo: https://www.authelia.com/images/branding/logo-cropped.png
          authorizationAddress: https://authelia.${SECRET_DOMAIN}/api/oidc/authorization
          tokenAddress: https://authelia.${SECRET_DOMAIN}/api/oidc/token
          profileAddress: https://authelia.${SECRET_DOMAIN}/api/oidc/userinfo
          scope: "openid email profile"
          authMethod: ClientSecretBasic
    media:
      volumes:
        - name: media
          nfs:
            server: nas.${SECRET_HOME_DOMAIN}
            path: /spool/media
      volumeMounts:
        - mountPath: &path /media
          name: media
          readOnly: true
      baseMountPath: *path

    contentdatabase:
      tmdb:
        apikeyKey: TMDB_API_KEY
        existingSecret: *secret
      tvdb:
        apikeyKey: TVDB_APIKEY
        pinKey: TVDB_PIN
        existingSecret: *secret

    back:
      kyoo_back:
        resources:
          requests:
            cpu: 10m
            memory: 1Gi
          limits:
            cpu: 8000m
            memory: 8Gi
      persistence:
        existingClaim: *app

    ingress:
      enabled: true
      ingressClassName: internal
      host: kyoo.${SECRET_DOMAIN}
      tls: true

    meilisearch:
      enabled: true
    rabbitmq:
      enabled: true
