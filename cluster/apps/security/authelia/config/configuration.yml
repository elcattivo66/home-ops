###############################################################
#                   Authelia configuration                    #
###############################################################

server.host: 0.0.0.0
server.port: 9091
#log:
#  level: info
#  format: json
#  file_path: "/var/log/authelia.log"
#  keep_stdout: true

# This secret can also be set using the env variables AUTHELIA_JWT_SECRET_FILE
# I used this site to generate the secret: https://www.grc.com/passwords.htm
# jwt_secret: SECRET_GOES_HERE # use docker secret file instead AUTHELIA_JWT_SECRET_FILE

# https://docs.authelia.com/configuration/miscellaneous.html#default-redirection-url
default_redirection_url: https://authelia.elcattivo.de

totp:
  issuer: authelia.com
  period: 30
  skew: 1

# Enable the following for Duo Push Notification support
# https://www.authelia.com/docs/features/2fa/push-notifications.html
duo_api:
  hostname: api-cc38a402.duosecurity.com
  integration_key: DI12FP42DF9KVD03LBBR
#  # This secret can also be set using the env variables AUTHELIA_DUO_API_SECRET_KEY_FILE
#  secret_key: # use docker secret file instead AUTHELIA_DUO_API_SECRET_KEY_FILE

authentication_backend:
  # file:
  #   path: /config/users_database.yml
  #   # customize passwords based on https://docs.authelia.com/configuration/authentication/file.html
  #   password:
  #     algorithm: argon2id
  #     iterations: 1
  #     salt_length: 16
  #     parallelism: 8
  #     memory: 1024 # blocks this much of the RAM. Tune this.
  password_reset:
    disable: false
  refresh_interval: 1m
  ldap:
    implementation: custom
    # Pattern is ldap://HOSTNAME-OR-IP:PORT
    # Normal ldap port is 389, standard in LLDAP is 3890
    url: ldap://lldap:3890
    # The dial timeout for LDAP.
    timeout: 5s
    # Use StartTLS with the LDAP connection, TLS not supported right now
    start_tls: false
    #tls:
    #  skip_verify: false
    #  minimum_version: TLS1.2
    # Set base dn, like dc=google,dc.com
    base_dn: dc=elcattivo,dc=de
    username_attribute: uid
    # You need to set this to ou=people, because all users are stored in this ou!
    additional_users_dn: ou=people
    # To allow sign in both with username and email, one can use a filter like
    # (&(|({username_attribute}={input})({mail_attribute}={input}))(objectClass=person))
    users_filter: (&({username_attribute}={input})(objectClass=person))
    # Set this to ou=groups, because all groups are stored in this ou
    additional_groups_dn: ou=groups
    # Only this filter is supported right now
    groups_filter: (member={dn})
    # The attribute holding the name of the group.
    group_name_attribute: cn
    # Email attribute
    mail_attribute: mail
    # The attribute holding the display name of the user. This will be used to greet an authenticated user.
    display_name_attribute: displayName
    # The username and password of the admin user.
    # "admin" should be the admin username you set in the LLDAP configuration
    user: uid=admin,ou=people,dc=elcattivo,dc=de
    # Password can also be set using a secret: https://www.authelia.com/docs/configuration/secrets.html
    #password: 'REPLACE_ME'

# https://docs.authelia.com/configuration/access-control.html
access_control:
  default_policy: deny
  rules:
    # Rules applied to everyone
    - domain: authelia.elcattivo.de
      policy: bypass
    - domain: gitea.elcattivo.de
      policy: bypass
      resources:
      - "^/philipp([/?].*)?$"
    - domain: gotify.elcattivo.de
      policy: bypass
      resources:
      - "^/message([/?].*)?$"
      - "^/current/.*$"  
      - "^/stream([/?].*)?$"  
      - "^/version"
      - "^/application"     
      - "^/static/.*$"  
      - "^/image/.*$"  
      methods:
      - GET
      - POST
      - DELETE
    - domain: 
      - "elcattivo.de"
      - "*.elcattivo.de"
      policy: two_factor
    - domain: "*"
      policy: bypass
      networks:
        - 192.168.178.0/24
        - 172.19.0.0/16

session:
  name: authelia_session
  # This secret can also be set using the env variables AUTHELIA_SESSION_SECRET_FILE
  # Used a different secret, but the same site as jwt_secret above.
  # secret: SECRET_GOES_HERE # use docker secret file instead AUTHELIA_SESSION_SECRET_FILE
  expiration: 3600 # 1 hour
  inactivity: 300 # 5 minutes
  domain: elcattivo.de # Should match whatever your root protected domain is
  remember_me_duration: 1M
  redis:
    host: authelia-redis
    port: 6379
    # This secret can also be set using the env variables AUTHELIA_SESSION_REDIS_PASSWORD_FILE
    # password: authelia

regulation:
  max_retries: 3
  find_time: 120
  ban_time: 300

storage:
# For local storage, uncomment lines below and comment out mysql. https://docs.authelia.com/configuration/storage/sqlite.html
  #local:
  #  path: /config/db.sqlite3
  postgres:
    host: postgres-db
    port: 5432
    database: authelia
    schema: public
    username: authelia
#  mysql:
  # MySQL allows running multiple authelia instances. Create database and enter details below.
  #  host: MYSQL_HOST
  #  port: 3306
  #  database: authelia
  #  username: DBUSERNAME
    # Password can also be set using a secret: https://docs.authelia.com/configuration/secrets.html
    # password: use docker secret file instead AUTHELIA_STORAGE_MYSQL_PASSWORD_FILE

notifier:
  smtp:
    username: philipp.bross@mailbox.org
    # This secret can also be set using the env variables AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE
    # password: # use docker secret file instead AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE
    host: smtp.mailbox.org
    port: 587 #465
    sender: elcattivo@mailbox.org
  # For testing purpose, notifications can be sent in a file. Be sure map the volume in docker-compose.
#  filesystem:
#    filename: /tmp/authelia/notification.txt

theme: auto

identity_providers:
  oidc:
    #hmac_secret: this_is_a_secret_abc123abc123abc # Use docker secret
    #issuer_private_key: |
    #  --- KEY START
    #  --- KEY END
    access_token_lifespan: 1h
    authorize_code_lifespan: 1m
    id_token_lifespan: 1h
    refresh_token_lifespan: 90m
    enable_client_debug_messages: true
    clients:
      - id: portainer
        description: Portainer
        secret: qQPIwd1G3rjYNIdligqUfR1JIi3hT9LeF4gXiWr4JjDyIfenk6JS5lh4BandzeJ6
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1M
        audience: []
        scopes:
          - openid
          - groups
          - email
          - profile
        redirect_uris:
          - https://portainer.elcattivo.de/
        grant_types:
          - refresh_token
          - authorization_code
        response_types:
          - code
        response_modes:
          - form_post
          - query
          - fragment
        userinfo_signing_algorithm: none
      - id: grafana
        description: Grafana
        secret: CsEquXTTFDBpUundXQVLowKcLF9U6yd9KHBGToeZw785agcgnXjmERK7svtUZzGE
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1M
        audience: []
        scopes:
          - openid
          - groups
          - email
          - profile
        redirect_uris:
          - https://grafana.elcattivo.de/login/generic_oauth
        grant_types:
          - refresh_token
          - authorization_code
        response_types:
          - code
        response_modes:
          - form_post
          - query
          - fragment
        userinfo_signing_algorithm: none
      - id: nextcloud
        description: Nextcloud
        secret: 5FMZmn4bSTEeNfbcyeN2X7HhkqNgG2jZ2tEEhUR643ckEEPhizrmebfLAc8R3ncw
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1M
        audience: []
        scopes:
          - openid
          - groups
          - email
          - profile
        redirect_uris:
          - https://nextcloud.elcattivo.de:443/apps/oidc_login/oidc
        grant_types:
          - refresh_token
          - authorization_code
        response_types:
          - code
        response_modes:
          - form_post
          - query
          - fragment
        userinfo_signing_algorithm: none
      - id: gitea
        description: Gitea
        secret: FPMxf5ai4Mkqw6WktXzv2eYgD3sc2CanNYW85gvWPc7yNKAwswMjEvMvjv4RbqZZ
        public: false
        authorization_policy: two_factor
        audience: []
        scopes:
          - openid
          - groups
          - email
          - profile
        redirect_uris:
          - https://gitea.elcattivo.de/user/oauth2/authelia/callback
        grant_types:
          - refresh_token
          - authorization_code
        response_types:
          - code
        response_modes:
          - form_post
          - query
          - fragment
        userinfo_signing_algorithm: none