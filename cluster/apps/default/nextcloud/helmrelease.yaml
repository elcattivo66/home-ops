apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app nextcloud
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: nextcloud
      version: 3.3.3
      sourceRef:
        kind: HelmRepository
        name: nextcloud-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    fullnameOverride: *app
    image:
      repository: nextcloud
      tag: 25.0.1-fpm-alpine
      flavor: fpm-alpine
    ingress:
      enabled: false
    nextcloud:
      host: cloud.${SECRET_DOMAIN}
      existingSecret:
        enabled: true
        secretName: nextcloud-secret
        usernameKey: nextcloud-username
        passwordKey: nextcloud-password
      datadir: /var/www/data
      configs:
        custom.config.php: |-
          <?php
          $CONFIG = array (
            'overwriteprotocol' => 'https',
            'overwrite.cli.url' => 'https://cloud.elcattivo.de',
            'overewritehost' => 'cloud.elcattivo.de',
            'filelocking.enabled' => 'true',
            'loglevel' => '2',
            'log_type' => 'file',
            'logfile' => '/var/www/html/nextcloud.log',
            'enable_previews' => true,
            'trusted_domains' =>
              array (
                0 => 'nextcloud',
                1 => 'cloud.elcattivo.de',
                2 => 'localhost',
                3 => '10.42.3.*',
                4 => '192.168.178.*',
                5 => '192.168.178.231',
              ),
            'trusted_proxies' =>
              array (
                0 => '10.42.3.0/16',
                1 => '192.168.178.0/16',      
              ),
          );
        s3.config.php: |-
          <?php
          $CONFIG = array (
            'objectstore' => [
                    'class' => '\\OC\\Files\\ObjectStore\\S3',
                    'arguments' => [
                            'bucket' => 'nextcloud-data',
                            'autocreate' => true,
                            'key'    => '${MINIO_SECRET_KEY}',
                            'secret' => '${MINIO_ACCESS_KEY}',
                            'hostname' => '${NAS_ADDR}',
                            'port' => 9102,
                            'region' => 'eu-central-1',
                            'use_ssl' => false,
                            'use_path_style' => true
                    ],
            ],
          );
        redis.config.php: |-
          <?php
          $CONFIG = array (
            'memcache.local' => '\\OC\\Memcache\\Redis',
            'memcache.distributed' => '\OC\Memcache\Redis',
            'memcache.locking' => '\OC\Memcache\Redis',
            'redis' => array(
              'host' => getenv('redis-master.databases.svc.cluster.local'),
              'port' => getenv('REDIS_HOST_PORT') ?: 6379,
              'password' => (string) getenv('REDIS_HOST_PASSWORD'),
              'dbindex' => 3,
            )
          );
      # extraEnv:
      #   - name: REDIS_HOST
      #     value: redis-master.databases.svc.cluster.local
      #   - name: REDIS_HOST_PORT
      #     value: "6379"
        # - name: REDIS_HOST_PASSWORD
        #   valueFrom:
        #     secretKeyRef:
        #       name: nextcloud-secret
        #       key: redis-password
      extraInitContainers:
        - name: wait-database
          image: alpine:3.17.0
          imagePullPolicy: IfNotPresent
          command:
            - sh
          args:
            - -c
            - >-
              until nc -w 1 -v $MYSQL_HOST:3306 || nc -w 1 -v $POSTGRES_HOST:5432;
              do echo "Waiting for database";
              done
          env:
            - name: POSTGRES_HOST
              value: postgres-rw.databases.svc.cluster.local
        - name: wait-redis
          image: alpine:3.17.0
          imagePullPolicy: IfNotPresent
          command:
            - sh
          args:
            - -c
            - >-
              until nc -w 1 -v $REDIS_HOST:$REDIS_HOST_PORT;
              do echo "Waiting for Redis";
              done
          env:
            - name: REDIS_HOST
              value: redis-master.databases.svc.cluster.local
            - name: REDIS_HOST_PORT
              value: "6379"
    nginx:
      enabled: true
      image:
        repository: nginx
        tag: 1.23-alpine
    internalDatabase:
      enabled: false      
    externalDatabase:
      enabled: true
      type: postgresql
      host: postgres-rw.databases.svc.cluster.local:5432
      database: nextcloud
      existingSecret:
        enabled: true
        secretName: nextcloud-pg-secret
        usernameKey: user
        passwordKey: password

    service:
      type: LoadBalancer
      port: 8080
      loadBalancerIP: 192.168.178.231

    persistence:
      enabled: true
      existingClaim: nextcloud-config-v1
      # nextcloudData:
      #   enabled: true
      #   existingClaim: nextcloud-data

    defaultConfigs:
      .htaccess: true
      apache-pretty-urls.config.php: true
      apcu.config.php: true
      apps.config.php: true
      autoconfig.php: false
      redis.config.php: false
      smtp.config.php: true

    cronjob:
      annotations: {}
      curlInsecure: false
      enabled: false
      failedJobsHistoryLimit: 3
      image: {}
      schedule: '*/5 * * * *'
      successfulJobsHistoryLimit: 2

    hpa:
      enabled: false

    startupProbe:
      enabled: false
    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false

    resources:
      requests:
        cpu: 100m
        memory: 150Mi
