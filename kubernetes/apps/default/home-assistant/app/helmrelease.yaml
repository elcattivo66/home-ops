---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: home-assistant
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    initContainers:
      01-init-db:
        image: ghcr.io/onedr0p/postgres-init:14.9
        imagePullPolicy: IfNotPresent
        envFrom:
          - secretRef:
              name: home-assistant-secret
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      repository: ghcr.io/onedr0p/home-assistant
      tag: 2023.10.5@sha256:24ce89830111fe19bb2df00621dfd631fd20abe07a453ea60c2027890d5b934e
    #podAnnotations:
    #  k8s.v1.cni.cncf.io/networks: networking/hass-iot-static
      # k8s.v1.cni.cncf.io/networks: |
      #   [{
      #     "name":"multus-iot",
      #     "namespace": "networking",
      #     "ips": ["192.168.178.250/24"]
      #   }]
    env:
      TZ: ${TZ}
      HASS_TRUSTED_PROXIES: "192.168.178.0/24,10.42.0.0/16,10.43.0.0/16"
      POSTGRES_HOST: postgres-rw.databases.svc.cluster.local
      POSTGRES_DB: home_assistant
    envFrom:
      - secretRef:
          name: home-assistant-secret

    # hostNetwork: true
    # dnsPolicy: ClusterFirstWithHostNet

    service:
      main:
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: ${SVC_HASS_ADDR}
        externalTrafficPolicy: Cluster
        ports:
          http:
            port: 8123
          mdns-tcp:
            enabled: true
            port: 5353
            protocol: TCP
            targetPort: 5353
          mdns-udp:
            enabled: true
            port: 5353
            protocol: UDP
            targetPort: 5353
          sonos:
            enabled: true
            port: 1400
    ingress:
      main:
        enabled: true
        primary: true
        ingressClassName: traefik
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: >-
            networking-local-only@kubernetescrd
        hosts:
          - host: &host "hass.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: ${SECRET_CERT_NAME}-prod-tls

    probes:
      liveness:
        enabled: false
      readiness:
        enabled: false
      startup:
        enabled: false
    podSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 5Gi
        storageClass: longhorn
    resources:
      requests:
        cpu: 10m
        memory: 100Mi
      limits:
        memory: 750Mi
