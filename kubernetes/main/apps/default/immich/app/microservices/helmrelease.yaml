---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app immich-microservices
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  dependsOn:
    - name: immich-server
      namespace: default
  values:
    controllers:
      main:
        replicas: 1
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.95.1
            env:
              IMMICH_MEDIA_LOCATION: &mediaLocation /usr/src/app/upload
            envFrom:
              - secretRef:
                  name: immich-secret
              - configMapRef:
                  name: immich-config
            resources:
              requests:
                gpu.intel.com/i915: 1
                cpu: 5m
                memory: 2755Mi
              limits:
                gpu.intel.com/i915: 1
                memory: 2755Mi
            args: ["start-microservices.sh"]
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [44, 105]
          nodeSelector:
            intel.feature.node.kubernetes.io/gpu: "true"
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: *app
    service:
      main:
        enabled: false
    persistence:
      library:
        type: nfs
        server: nas.${SECRET_HOME_DOMAIN}
        path: /tank/photos/immich/
        globalMounts:
          - path: *mediaLocation
      external:
        type: nfs
        server: nas.${SECRET_HOME_DOMAIN}
        path: /tank/photos/Plex_Album/
        globalMounts:
          - path: /external-library/
