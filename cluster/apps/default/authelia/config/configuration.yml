---
access_control:
  default_policy: deny
  rules:
    # Rules applied to everyone
    - domain: authelia.${SECRET_DOMAIN}
      policy: bypass
    - domain: gitea.${SECRET_DOMAIN}
      policy: bypass
      resources:
        - "^/philipp([/?].*)?$"
    - domain: gotify.${SECRET_DOMAIN}
      policy: bypass
      resources:
        - "^/message([/?].*)?$"
        - "^/current/.*$"
        - "^/stream([/?].*)?$"
        - "^/version"
        - "^/application"
        - "^/static/.*$"
        - "^/image/.*$"
      methods:
        - GET
        - POST
        - DELETE
    - domain:
        - "${SECRET_DOMAIN}"
        - "*.${SECRET_DOMAIN}"
      policy: two_factor
    - domain: "*"
      policy: bypass
      networks:
        - 192.168.178.0/24

identity_providers:
  oidc:
    access_token_lifespan: 1h
    authorize_code_lifespan: 1m
    id_token_lifespan: 1h
    refresh_token_lifespan: 90m
    enable_client_debug_messages: true
    clients:
      - id: grafana
        description: Grafana
        secret: ${SECRET_GRAFANA_OAUTH_CLIENT_SECRET}
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1M
        audience: []
        scopes:
          - openid
          - groups
          - email
          - profile
        redirect_uris:
          - https://grafana.${SECRET_DOMAIN}/login/generic_oauth
        grant_types:
          - refresh_token
          - authorization_code
        response_types:
          - code
        response_modes:
          - form_post
          - query
          - fragment
        userinfo_signing_algorithm: none
      - id: nextcloud
        description: Nextcloud
        secret: ${SECRET_NEXTCLOUD_OAUTH_CLIENT_SECRET}
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1M
        audience: []
        scopes:
          - openid
          - groups
          - email
          - profile
        redirect_uris:
          - https://nextcloud.${SECRET_DOMAIN}/apps/oidc_login/oidc
          - https://cloud.${SECRET_DOMAIN}/apps/oidc_login/oidc
        grant_types:
          - refresh_token
          - authorization_code
        response_types:
          - code
        response_modes:
          - form_post
          - query
          - fragment
        userinfo_signing_algorithm: none
      - id: gitea
        description: Gitea
        secret: ${SECRET_GITEA_OAUTH_CLIENT_SECRET}
        public: false
        authorization_policy: two_factor
        audience: []
        scopes:
          - openid
          - groups
          - email
          - profile
        redirect_uris:
          - https://gitea.${SECRET_DOMAIN}/user/oauth2/authelia/callback
        grant_types:
          - refresh_token
          - authorization_code
        response_types:
          - code
        response_modes:
          - form_post
          - query
          - fragment
        userinfo_signing_algorithm: none
      - id: immich
        description: Immich
        secret: ${SECRET_IMMICH_OAUTH_CLIENT_SECRET}
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        scopes:
          - openid
          - profile
          - email
        redirect_uris: 
          - https://immich.${SECRET_DOMAIN}/auth/login
          - app.immich:/
        userinfo_signing_algorithm: none
      - id: minio
        description: Minio
        secret: "${SECRET_MINIO_OAUTH_CLIENT_SECRET}"
        public: false
        authorization_policy: two_factor
        pre_configured_consent_duration: 1y
        scopes: ["openid", "profile", "groups", "email"]
        redirect_uris: ["https://minio-admin.${SECRET_DOMAIN}/oauth_callback"]
        userinfo_signing_algorithm: none
# theme: auto
# authentication_backend:
#   password_reset: 
#     disable: false
#   ldap:
#     enabled: true
#     implementation: custom
#     url: ldap://lldap:3890
#     timeout: 5s
#     start_tls: false
#     base_dn: dc=elcattivo,dc=de
#     username_attribute: uid
#     additional_users_dn: ou=people
#     users_filter: (&({username_attribute}={input})(objectClass=person))
#     additional_groups_dn: ou=groups
#     groups_filter: (member={dn})
#     group_name_attribute: cn
#     mail_attribute: mail
#     display_name_attribute: displayName
#     user: uid=admin,ou=people,dc=elcattivo,dc=de
    # Password can also be set using a secret: https://www.authelia.com/docs/configuration/secrets.html
  # file:
  #   enabled: false
  #   password:
  #     algorithm: argon2id



# session:
#   redis:
#     enabled: true
#     host: redis-master.databases.svc.cluster.local

# storage:
#   postgres:
#     enabled: true
#     host: postgres-rw.databases.svc.cluster.local



# notifier:
#   smtp:
#     enabled: true
#     enabledSecret: true
#     host: smtp.mailbox.org
#     port: 587
#     username: ${SECRET_SMTP_USERNAME}
#     sender: ${SECRET_SMTP_SENDER}
    #identifier: ${EXTERNAL_DOMAIN}
