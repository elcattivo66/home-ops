apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: tandoor
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.2.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3

  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    controllers:
      main:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: 'true'

        initContainers:
          01-init-db:
            imagePullPolicy: IfNotPresent
            envFrom:
              - secretRef:
                  name: tandoor-secret
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: '14.9'
        containers:
          main:
            image:
              repository: docker.io/vabene1111/recipes
              tag: 1.5.6
            envFrom:
              - secretRef:
                  name: tandoor-secret

            env:
              TIMEZONE: ${TZ}
              ENABLE_METRICS: 1
              ENABLE_SIGNUP: 0
              TANDOOR_PORT: 8080
              GUNICORN_MEDIA: 0
              DEBUG: 0
              SQL_DEBUG: 0
              DEBUG_TOOLBAR: 0
              DB_ENGINE: django.db.backends.postgresql
              EMAIL_HOST: smtp-relay.default.svc.cluster.local
              EMAIL_PORT: 2525
              EMAIL_USE_TLS: 0
              EMAIL_USE_SSL: 0
              DEFAULT_FROM_EMAIL: ${SECRET_SMTP_SENDER}

        statefulset:
          volumeClaimTemplates:
            - name: tandoor-media
              accessMode: ReadWriteOnce
              size: 1Gi
              storageClass: longhorn

              globalMounts:
                - path: /opt/recipes/mediafiles
    service:
      main:
        ports:
          http:
            port: 8080

    ingress:
      main:
        enabled: true
        className: traefik
        annotations:
          external-dns.alpha.kubernetes.io/target: ipv4.${SECRET_DOMAIN}
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: >-
            networking-headers@kubernetescrd,
            networking-authelia@kubernetescrd
        hosts:
          - host: &host '{{ .Release.Name }}.${SECRET_DOMAIN}'
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
            secretName: ${SECRET_CERT_NAME}-prod-tls

    persistence:
      static:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /opt/recipes/staticfiles
      cache:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /mnt/cache
      django-js-reverse:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /opt/recipes/cookbook/static/django_js_reverse
