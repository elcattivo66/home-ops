---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: lidarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: longhorn
      namespace: longhorn-system
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 15.5
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: sonarr-secret
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/lidarr-develop
              tag: 2.0.4.3802@sha256:bdd7420e1c9056048b3531baccfd18ff14709cbba9773ced65fed6a3740f4883
            env:
              TZ: ${TZ}
              LIDARR__INSTANCE_NAME: Lidarr
              LIDARR__PORT: &port 80
              LIDARR__LOG_LEVEL: info
              LIDARR__AUTHENTICATION_METHOD: External
              LIDARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
            envFrom: *envFrom
            resources:
              requests:
                cpu: 13m
                memory: 603Mi
              limits:
                memory: 603Mi
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: lidarr-config
      media:
        type: nfs
        server: nas.${SECRET_HOME_DOMAIN}
        path: /tank/media
        globalMounts:
          - path: /media
