---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app tandoor
  namespace: &ns default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3

  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    controllers:
      main:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: 'true'

        initContainers:
          01-init-db:
            imagePullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: tandoor-secret
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: '15.5'
          02-init-migrate:
            image:
              repository: vabene1111/recipes
              tag: 1.5.8
            envFrom: *envFrom
            command:
            - sh
            - -c
            - |
              set -e
              source /opt/recipes/venv/bin/activate
              echo "Updating database"
              python3 /opt/recipes/manage.py migrate
              python3 /opt/recipes/manage.py collectstatic_js_reverse
              python3 /opt/recipes/manage.py collectstatic --noinput
        containers:
          main:
            image:
              repository: docker.io/vabene1111/recipes
              tag: 1.5.6
            envFrom: *envFrom
            env:
              TIMEZONE: ${TZ}
              ENABLE_METRICS: 1
              ENABLE_SIGNUP: 0
              TANDOOR_PORT: &port 8888
              GUNICORN_MEDIA: 0
              DEBUG: 0
              SQL_DEBUG: 0
              DEBUG_TOOLBAR: 0
              EMAIL_HOST: smtp-relay.default.svc.cluster.local
              EMAIL_PORT: 2525
              EMAIL_USE_TLS: 0
              EMAIL_USE_SSL: 0
              DEFAULT_FROM_EMAIL: ${SECRET_SMTP_SENDER}
              ALLOWED_HOSTS: "*"
              FRACTION_PREF_DEFAULT: 0
              COMMENT_PREF_DEFAULT: 1
              SHOPPING_MIN_AUTOSYNC_INTERVAL: 5
              SOCIALACCOUNT_PROVIDERS: |
                { "openid_connect": { "SERVERS": [ { "id": "tandoor", "name": "Authelia", "server_url": "https://authelia.${SECRET_DOMAIN}", "token_auth_method": "client_secret_basic", "APP": { "client_id": "tandoor", "secret": "${SECRET_TANDOOR_OAUTH_CLIENT_SECRET}", } } ] }}
              SOCIAL_PROVIDERS: allauth.socialaccount.providers.openid_connect
            command:
              - /opt/recipes/venv/bin/gunicorn
              - -b
              - :8888
              - --access-logfile
              - "-"
              - --error-logfile
              - "-"
              - --log-level
              - INFO
              - recipes.wsgi
            resources:
              requests:
                cpu: 10m
                memory: 150Mi
              limits:
                memory: 150Mi
          nginx:
            image:
              repository: nginxinc/nginx-unprivileged
              tag: 1.25.3-alpine
            resources:
              requests:
                cpu: 10m
                memory: 100Mi
              limits:
                memory: 100Mi
    service:
      main:
        ports:
          http:
            port: *port
          nginx:
            port: &port2 8080

    ingress:
      main:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
        hosts:
          - host: &host '{{ .Release.Name }}.${SECRET_DOMAIN}'
            paths:
              - path: /
                service:
                  name: main
                  port: http
              - path: /media
                service:
                  name: main
                  port: *port2
              - path: /static
                service:
                  name: main
                  port: *port2
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: tandoor-files
        advancedMounts:
          main:
            main:
              - path: /opt/recipes/mediafiles
            nginx:
              - path: /media
      nginx-config:
        type: configMap
        name: tandoor-configmap
        advancedMounts:
          main:
            nginx:
              - path: /etc/nginx/nginx.conf
                subPath: nginx-config
      django-js-reverse:
        type: emptyDir
        advancedMounts:
          main:
            main:
              - path: /opt/recipes/cookbook/static/django_js_reverse
      static:
        type: emptyDir
        advancedMounts:
          main:
            main:
              - path: /opt/recipes/staticfiles
            nginx:
              - path: /static
      cache:
        type: emptyDir
        advancedMounts:
          main:
            nginx:
              - path: /var/cache/nginx
  postRenderers:
    - kustomize:
        patchesStrategicMerge:
          - kind: StatefulSet
            apiVersion: apps/v1
            metadata:
              name: tandoor
              namespace: *ns
            spec:
              template:
                spec:
                  initContainers:
                    - name: 02-init-migrate
                      volumeMounts:
                        - name: django-js-reverse
                          mountPath: /opt/recipes/cookbook/static/django_js_reverse
                        - name: static
                          mountPath: /opt/recipes/staticfiles
