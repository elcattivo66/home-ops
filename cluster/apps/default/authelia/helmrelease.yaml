---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authelia
  namespace: default
spec:
  interval: 5m
  chart:
    spec:
      chart: authelia
      version: 0.8.38
      sourceRef:
        kind: HelmRepository
        name: authelia-charts
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
    remediation: # perform remediation when helm install fails
      retries: 3
  upgrade:
    remediation: # perform remediation when helm upgrade fails
      retries: 3
      remediateLastFailure: true # remediate the last failure, when no retries remain
    cleanupOnFail: true
  values:
    domain: ${SECRET_DOMAIN}
    service:
      port: 9091

    pod:
      # Must be Deployment, DaemonSet, or StatefulSet.
      kind: Deployment

      env:
        - name: TZ
          value: ${TZ}

    resources:
      requests:
        cpu: 5m
        memory: 10Mi
      limits:
        memory: 100Mi

    ##
    ## Authelia Config Map Generator
    ##
    configMap:
      enabled: true
      server:
        port: 9091
        read_buffer_size: 8192
        write_buffer_size: 8192
      theme: auto
      authentication_backend:
        disable_reset_password: false
        ldap:
          enabled: true
          implementation: custom
          url: ldap://lldap:3890
          timeout: 5s
          start_tls: false
          base_dn: dc=elcattivo,dc=de
          username_attribute: uid
          additional_users_dn: ou=people
          users_filter: (&({username_attribute}={input})(objectClass=person))
          additional_groups_dn: ou=groups
          groups_filter: (member={dn})
          group_name_attribute: cn
          mail_attribute: mail
          display_name_attribute: displayName
          user: uid=admin,ou=people,dc=elcattivo,dc=de
          # Password can also be set using a secret: https://www.authelia.com/docs/configuration/secrets.html
        file:
          enabled: false
          password:
            algorithm: argon2id

      access_control:
        default_policy: deny
        rules:
          # Rules applied to everyone
          - domain: authelia.elcattivo.de
            policy: bypass
          - domain: radarr.elcattivo.de
            policy: bypass
            resources:
            - "^/philipp([/?].*)?$"
          - domain: gitea.elcattivo.de
            policy: bypass
            resources:
            - "^/philipp([/?].*)?$"
          - domain: gotify.elcattivo.de
            policy: bypass
            resources:
            - "^/message([/?].*)?$"
            - "^/current/.*$"  
            - "^/stream([/?].*)?$"  
            - "^/version"
            - "^/application"     
            - "^/static/.*$"  
            - "^/image/.*$"  
            methods:
            - GET
            - POST
            - DELETE
          - domain: 
            - "elcattivo.de"
            - "*.elcattivo.de"
            policy: two_factor
          - domain: "*"
            policy: bypass
            networks:
              - 192.168.178.0/24

      session:
        redis:
          enabled: true
          host: redis-master.databases.svc.cluster.local

      storage:
        postgres:
          enabled: true
          host: postgres-rw.databases.svc.cluster.local
          
      identity_providers:
        oidc:
          access_token_lifespan: 1h
          authorize_code_lifespan: 1m
          id_token_lifespan: 1h
          refresh_token_lifespan: 90m
          enable_client_debug_messages: true
          clients:
            - id: grafana
              description: Grafana
              secret: ${SECRET_GRAFANA_OAUTH_CLIENT_SECRET}
              public: false
              authorization_policy: two_factor
              pre_configured_consent_duration: 1M
              audience: []
              scopes:
                - openid
                - groups
                - email
                - profile
              redirect_uris:
                - https://grafana.elcattivo.de/login/generic_oauth
              grant_types:
                - refresh_token
                - authorization_code
              response_types:
                - code
              response_modes:
                - form_post
                - query
                - fragment
              userinfo_signing_algorithm: none

      notifier:
        smtp:
          enabled: true
          enabledSecret: true
          host: smtp.mailbox.org
          port: 587
          username: ${SECRET_SMTP_USERNAME}
          sender: ${SECRET_SMTP_SENDER}
          #identifier: ${EXTERNAL_DOMAIN}

    secret:
      existingSecret: authelia

