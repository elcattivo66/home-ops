apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app immich
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: immich
      version: 0.0.2
      sourceRef:
        kind: HelmRepository
        name: gitea-registry-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    redis:
      enabled: false
    postgresql:
      enabled: false
    common_env:
      REDIS_HOSTNAME: redis-master.databases.svc.cluster.local
      REDIS_DBINDEX: 2
      DB_HOSTNAME: postgres-rw.databases.svc.cluster.local
      DB_DATABASE_NAME:
        valueFrom:
          secretKeyRef:
            key: dbname
            name: immich-secret
      DB_USERNAME:
        valueFrom:
          secretKeyRef:
            key: dbuser
            name: immich-secret
      DB_PASSWORD:
        valueFrom:
          secretKeyRef:
            key: dbpass
            name: immich-secret
      JWT_SECRET:
        valueFrom:
          secretKeyRef:
            key: secret_key
            name: immich-secret
      ENABLE_MAPBOX: false

    server:
      enabled: true
      env:
        NODE_ENV: "production"
      service:
        main:
          enabled: true
          primary: true
          type: ClusterIP
          ports:
            http:
              enabled: true
              primary: true
              port: 3001
              protocol: HTTP
      image:
        # -- image repository
        repository: altran1502/immich-server
        # -- image tag
        tag: v1.29.0_42-dev
        # -- image pull policy
        pullPolicy: IfNotPresent
      command: "/bin/sh"
      args:
        - "./start-server.sh"

    microservice:
      enabled: true
      env:
        NODE_ENV: "production"
      service:
        main:
          enabled: false
          primary: true
          type: ClusterIP
          ports:
            http:
              enabled: true
              primary: true
              port: 3001
              protocol: HTTP
      image:
        # -- image repository
        repository: altran1502/immich-server
        # -- image tag
        tag: v1.29.0_42-dev
        # -- image pull policy
        pullPolicy: IfNotPresent
      command: "/bin/sh"
      args:
        - "./start-microservices.sh"

    machine_learning:
      enabled: true
      image:
        # -- image repository
        repository: altran1502/immich-machine-learning
        # -- image tag
        tag: v1.29.0_42-dev
        # -- image pull policy
        pullPolicy: IfNotPresent

      service:
        main:
          enabled: true
          primary: true
          type: ClusterIP
          ports:
            http:
              enabled: true
              primary: true
              port: 3003
              protocol: HTTP

      command: "/bin/sh"
      args:
        - "./entrypoint.sh"
      env:
        NODE_ENV: "production"

    web:
      enabled: true
      image:
        # -- image repository
        repository: altran1502/immich-web
        # -- image tag
        tag: v1.29.0_42-dev
        # -- image pull policy
        pullPolicy: IfNotPresent
      env:
        NODE_ENV: "production"

      service:
        main:
          enabled: true
          primary: true
          type: ClusterIP
          ports:
            http:
              enabled: true
              primary: true
              port: 3000
              protocol: HTTP

      command: "/bin/sh"
      args:
        - "./entrypoint.sh"

    proxy:
      enabled: true
      image:
        # -- image repository
        repository: altran1502/immich-proxy
        # -- image tag
        tag: v1.29.0_42-dev
        # -- image pull policy
        pullPolicy: IfNotPresent

      service:
        main:
          enabled: true
          primary: true
          type: ClusterIP
          ports:
            http:
              enabled: true
              primary: true
              port: 8080
              protocol: HTTP

    persistence:
      config:
        enabled: true
        type: nfs
        server: "${NFS_ADDR}"
        path: /mnt/data/media/pictures/immich_upload
        mountPath: /usr/src/app/upload # /config
        readOnly: false
        retain: false