---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: grafana
      version: 6.61.1
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5

  values:
    replicas: 1
    rbac:
      pspEnabled: false
    admin:
      existingSecret: grafana-admin
    # envFromSecrets:
    #   - name: grafana
    env:
      GF_DATE_FORMATS_FULL_DATE: "MMM Do, YYYY hh:mm:ss a"
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_SECURITY_ALLOW_EMBEDDING: true
      GF_SECURITY_COOKIE_SAMESITE: grafana
      GF_SERVER_DOMAIN: grafana.${SECRET_DOMAIN}
      GF_SERVER_ROOT_URL: "https://grafana.${SECRET_DOMAIN}"
    grafana.ini:
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
      auth:
        signout_redirect_url: "https://grafana.${SECRET_DOMAIN}/"
        oauth_auto_login: false
      auth.generic_oauth:
        enabled: true
        name: Authelia
        client_id: grafana
        client_secret: "${SECRET_GRAFANA_OAUTH_CLIENT_SECRET}"
        scopes: "openid profile email groups"
        empty_scopes: false
        auth_url: "https://authelia.${SECRET_DOMAIN}/api/oidc/authorization"
        token_url: "https://authelia.${SECRET_DOMAIN}/api/oidc/token"
        api_url: "https://authelia.${SECRET_DOMAIN}/api/oidc/userinfo"
        login_attribute_path: preferred_username
        groups_attribute_path: groups
        name_attribute_path: name
        email_attribute_path: email
        use_pkce: true
      auth.generic_oauth.group_mapping:
        role_attribute_path: |
          contains(groups[*], 'admin') && 'Admin' || contains(groups[*], 'people') && 'Viewer'
        org_id: 1
      auth.basic:
        enabled: false
        # disable_login_form: false
      auth.anonymous:
        enabled: false
      #   org_name: HomeOps
      #   org_id: 1
      #   org_role: Viewer
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
          - name: openhab
            orgId: 1
            folder: Openhab
            type: file
            disableDeletion: false
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/openhab
          # - name: victoriametrics
          #   orgId: 1
          #   folder: VictoriaMetrics
          #   type: file
          #   disableDeletion: false
          #   editable: true
          #   options:
          #     path: /var/lib/grafana/dashboards/victoriametrics
          - name: flux
            orgId: 1
            folder: Flux
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/flux
          - name: kubernetes
            orgId: 1
            folder: Kubernetes
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/kubernetes
    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - { name: Alertmanager, orgId: 1 }
          - { name: Loki, orgId: 1 }
          - { name: Prometheus, orgId: 1 }
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://prometheus-operated:9090/
            # url: http://vmselect-victoria-metrics.monitoring.svc.cluster.local:8481/select/0/prometheus
            jsonData:
              prometheusType: Prometheus
            uid: prometheus
            isDefault: true
          - name: influxdb
            type: influxdb
            access: proxy
            url: http://influxdb.databases.svc.cluster.local:8086/
            database: openhab
            jsonData:
              httpMode: GET
              httpHeaderName1: Authorization
            secureJsonData:
              httpHeaderValue1: "${SECRET_INFLUXDB_TOKEN}"
          # - name: Loki
          #   type: loki
          #   access: proxy
          #   url: http://loki-gateway.monitoring.svc.cluster.local:80
          #   jsonData:
          #     maxLines: 250
    dashboards:
      default:
        external-dns:
          # renovate: depName="External-dns"
          gnetId: 15038
          revision: 1
          datasource: Prometheus
        longhorn:
          # renovate: depName="Longhorn"
          gnetId: 16888
          revision: 8
          datasource: Prometheus
        node-exporter-full:
          # renovate: depName="Node Exporter Full"
          gnetId: 1860
          revision: 32
          datasource: Prometheus
        zfs:
          # renovate: depName="ZFS"
          gnetId: 7845
          revision: 4
          datasource: Prometheus
        redis:
          # renovate: depName="Redis Dashboard for Prometheus Redis Exporter 1.x"
          gnetId: 763
          revision: 5
          datasource: Prometheus
        minio:
          # renovate: depName="MinIO Dashboard"
          gnetId: 13502
          revision: 24
          datasource:
          - name: DS_PROMETHEUS
            value: Prometheus
        cert-manager:
          url: https://gitlab.com/uneeq-oss/cert-manager-mixin/-/raw/master/dashboards/cert-manager.json
          datasource: Prometheus
      kubernetes:
        kubernetes-api-server:
          # renovate: depName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 14
          datasource: Prometheus
        kubernetes-coredns:
          # renovate: depName="Kubernetes / System / CoreDNS"
          gnetId: 15762
          revision: 13
          datasource: Prometheus
        kubernetes-global:
          # renovate: depName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 31
          datasource: Prometheus
        kubernetes-namespaces:
          # renovate: depName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 27
          datasource: Prometheus
        kubernetes-nodes:
          # renovate: depName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 19
          datasource: Prometheus
        kubernetes-pods:
          # renovate: depName="Kubernetes / Views / Pods"
          gNetId: 15760
          revision: 21
          datasource: Prometheus
        kubernetes-volumes:
          # renovate: depName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus
      flux:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/logs.json
          datasource: Prometheus
      openhab:
        metrics:
          url: https://raw.githubusercontent.com/openhab/openhab-addons/main/bundles/org.openhab.io.metrics/doc/dashboard.json
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        folderAnnotation: grafana_folder
        # provider:
        #   foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL
    plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      ingressClassName: traefik
      annotations:
        external-dns.alpha.kubernetes.io/target: ipv4.${SECRET_DOMAIN}
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.middlewares: >-
          networking-headers@kubernetescrd,
          networking-authelia@kubernetescrd
      hosts:
        - &host grafana.${SECRET_DOMAIN}
      tls:
        - hosts:
            - *host
    persistence:
      enabled: false

    resources:
      requests:
        cpu: 5m
        memory: 162M
      limits:
        memory: 362M

    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: grafana
