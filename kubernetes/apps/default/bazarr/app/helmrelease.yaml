
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app bazarr
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    initContainers:
      01-init-db:
        image: ghcr.io/onedr0p/postgres-init:14.8
        imagePullPolicy: IfNotPresent
        envFrom:
          - secretRef:
              name: bazarr-secret
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"

    image:
      repository: ghcr.io/onedr0p/bazarr
      tag: 1.2.4@sha256:7441744e7cb5b48c253214d387ea28563e3f171b7870b1f901323970056f76fa
      pullPolicy: IfNotPresent

    env:
      TZ: "Europe/Berlin"
      PUID: "1000"
      PGID: "1000"
    envFrom:
      - secretRef:
          name: bazarr-secret

    service:
      main:
        ports:
          http:
            port: 6767

    ingress:
      main:
        enabled: true
        primary: true
        ingressClassName: traefik
        annotations:
          external-dns.alpha.kubernetes.io/target: ipv4.${SECRET_DOMAIN}
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: >-
            networking-headers@kubernetescrd,
            networking-authelia@kubernetescrd
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: ${SECRET_CERT_NAME}-prod-tls

    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: longhorn

    persistence:
      nfs-media:
        enabled: true
        type: nfs
        server: ${NAS_ADDR}
        path: ${MEDIADIR}
        mountPath: /media
        readOnly: false
      # add-ons:
      #   enabled: true
      #   type: emptyDir
      #   mountPath: /add-ons

    podSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch

    resources:
      requests:
        cpu: 25m
        memory: 433M
      limits:
        memory: 433M

    # sidecars:
    #   subcleaner:
    #     image: registry.k8s.io/git-sync/git-sync:v3.6.6
    #     imagePullPolicy: IfNotPresent
    #     args:
    #       - --repo=https://github.com/KBlixt/subcleaner.git
    #       - --branch=master
    #       - --depth=1
    #       - --wait=43200 # 12 hours
    #       - --root=/add-ons/subcleaner
    #     volumeMounts:
    #       - { name: add-ons, mountPath: /add-ons }
