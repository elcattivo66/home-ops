---
version: "3"

tasks:

  sync:
    desc: Sync ExternalSecret resources
    vars:
      secret: '{{ .secret | default ""}}'
      namespace: '{{.namespace | default "default"}}'
    cmds:
      - |
        {{if eq .secret ""}}
          kubectl get externalsecret.external-secrets.io --all-namespaces --no-headers -A | awk '{print $1, $2}' \
            | xargs --max-procs=4 -l bash -c 'kubectl -n $0 annotate externalsecret.external-secrets.io $1 force-sync=$(date +%s) --overwrite'
        {{else}}
          kubectl -n {{.namespace}} annotate externalsecret.external-secrets.io {{.secret}} force-sync=$(date +%s) --overwrite
        {{end}}
    preconditions:
      - kubectl -n {{.namespace}} get es {{.secret}}

  sync-all:
    desc: Sync all ExternalSecrets for a cluster
    summary: |
      Args:
        cluster: Cluster to run command against (required)
    cmds:
      - for: { var: secrets, split: '' }
        task: sync
        vars:
          cluster: '{{.cluster}}'
          ns: '{{$a := split "|" .ITEM}}{{$a._0}}'
          secret: '{{$a := split "|" .ITEM}}{{$a._1}}'
    env:
      KUBECONFIG: "{{.KUBERNETES_DIR}}/{{.cluster}}/kubeconfig"
    vars:
      cluster: '{{ or .cluster (fail "Argument (cluster) is required") }}'
      secrets:
        sh: kubectl --context {{.cluster}} get externalsecret --all-namespaces --no-headers -A | awk '{print $1 "|" $2}'
