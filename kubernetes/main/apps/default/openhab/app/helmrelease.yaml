---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: openhab
spec:
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    controllers:
      main:
        containers:
          main:
            image:
              repository: docker.io/openhab/openhab
              tag: 4.1.1
            env:
              USER_ID: 1000
              GROUP_ID: 1000
              OPENHAB_HTTP_PORT: '8282'
              OPENHAB_HTTPS_PORT: '8443'
              EXTRA_JAVA_OPTS: -Duser.timezone=Europe/Berlin -Dlog4j2.formatMsgNoLookups=true

    # hostNetwork: true
    # dnsPolicy: ClusterFirstWithHostNet
    # podAnnotations:
    #   k8s.v1.cni.cncf.io/networks: macvlan-static-iot-openhab

            resources:
              requests:
                cpu: 56m
                memory: 1340Mi
              limits:
                memory: 1340Mi
    service:
      main:
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: ${SVC_OPENHAB_ADDR}
        externalTrafficPolicy: Cluster
        ports:
          http:
            port: 8282
          https:
            enabled: true
            port: 8443
          upnp:
            enabled: true
            port: 1900
            protocol: UDP
            targetPort: 1900
          karaf:
            enabled: true
            port: 8101
          mdns:
            enabled: true
            port: 5353
            protocol: UDP
            targetPort: 5353
          # hueemulation:
          #   enabled: true
          #   port: 8080
          #   protocol: TCP
          #   targetPort: 8080
          # sonos:
          #   enabled: true
          #   port: 1400
          #   protocol: TCP
          #   targetPort: 1400
          # chromecast1:
          #   port: 8008
          # chromecast2:
          #   port: 8009
    ingress:
      main:
        enabled: true
        className: internal
        hosts:
          - host: &host '{{ .Release.Name }}.${SECRET_DOMAIN}'
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      conf:
        enabled: true
        type: nfs
        server: nas.${SECRET_HOME_DOMAIN}
        path: /spool/openhab/conf
        globalMounts:
          - path: /openhab/conf
      userdata:
        enabled: true
        type: nfs
        server: nas.${SECRET_HOME_DOMAIN}
        path: /spool/openhab/userdata
        globalMounts:
          - path: /openhab/userdata
    # podSecurityContext:
    #     runAsUser: 1000
    #     runAsGroup: 1000
    #     fsGroup: 1000
    #     fsGroupChangePolicy: OnRootMismatch

