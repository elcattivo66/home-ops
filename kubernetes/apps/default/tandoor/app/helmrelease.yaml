---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: tandoor
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3

  values:
    initContainers:
      01-init-db:
        image: ghcr.io/onedr0p/postgres-init:14.8
        imagePullPolicy: IfNotPresent
        envFrom:
          - secretRef:
              name: tandoor-secret
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"

    image:
      repository: docker.io/vabene1111/recipes
      tag: 1.5.4
    env:
      TIMEZONE: ${TZ}
      ENABLE_METRICS: 1
      ENABLE_SIGNUP: 0
      TANDOOR_PORT: 8080
      GUNICORN_MEDIA: 0
      DB_ENGINE: django.db.backends.postgresql
    envFrom:
      - secretRef:
          name: tandoor-secret

    volumeClaimTemplates:
      - name: tandoor-media
        mountPath: /opt/recipes/mediafiles
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: longhorn

    persistence:
      static:
        enabled: true
        mountPath: /opt/recipes/staticfiles
        type: emptyDir
      cache:
        enabled: true
        mountPath: /mnt/cache
        type: emptyDir
      django-js-reverse:
        enabled: true
        type: emptyDir
        mountPath: /opt/recipes/cookbook/static/django_js_reverse

    service:
      main:
        ports:
          http:
            port: 8080

    ingress:
      main:
        enabled: true
        primary: true
        ingressClassName: traefik
        annotations:
          external-dns.alpha.kubernetes.io/target: ipv4.${SECRET_DOMAIN}
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: >-
            networking-headers@kubernetescrd,
            networking-authelia@kubernetescrd
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: ${SECRET_CERT_NAME}-prod-tls

    podSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
      fsGroupChangePolicy: "OnRootMismatch"
