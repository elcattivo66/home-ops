---
version: "3"

tasks:


  sync-secrets:
    desc: Sync all ExternalSecrets [CLUSTER=main]
    cmds:
      - for: { var: SECRETS, split: "\n" }
        cmd: kubectl --namespace {{splitList "," .ITEM | first}} annotate externalsecret {{splitList "," .ITEM | last}} force-sync="{{now | unixEpoch}}" --overwrite
    vars:
      SECRETS:
        sh: kubectl get externalsecret --all-namespaces --no-headers --output=jsonpath='{range .items[*]}{.metadata.namespace},{.metadata.name}{"\n"}{end}'
    requires:
      vars: [CLUSTER]
    preconditions:
      - which kubectl

  sync-all:
    desc: Sync all ExternalSecrets for a cluster
    summary: |
      Args:
        cluster: Cluster to run command against (required)
    cmds:
      - for: { var: secrets, split: '' }
        task: sync
        vars:
          cluster: '{{.cluster}}'
          ns: '{{$a := split "|" .ITEM}}{{$a._0}}'
          secret: '{{$a := split "|" .ITEM}}{{$a._1}}'
    env:
      KUBECONFIG: "{{.KUBERNETES_DIR}}/{{.cluster}}/kubeconfig"
    vars:
      cluster: '{{ or .cluster (fail "Argument (cluster) is required") }}'
      secrets:
        sh: kubectl --context {{.cluster}} get externalsecret --all-namespaces --no-headers -A | awk '{print $1 "|" $2}'
