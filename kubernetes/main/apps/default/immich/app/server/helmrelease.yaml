---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json

apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app immich-server
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.0.4
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      server:
        replicas: 2
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          01-init-db:
            envFrom:
              - secretRef:
                  name: immich-secret
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.2
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.100.0
            env:
              IMMICH_MEDIA_LOCATION: &mediaLocation /usr/src/app/upload
            envFrom:
              - secretRef:
                  name: immich-secret
              - configMapRef:
                  name: immich-config
            resources:
              requests:
                cpu: 5m
                memory: 356Mi
              limits:
                memory: 356Mi
            args: [start-server.sh]
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: *app
    service:
      app:
        controller: server
        ports:
          http:
            port: 3001

    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
        hosts:
          - host: &host immich.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      library:
        type: nfs
        server: nas.${SECRET_HOME_DOMAIN}
        path: /tank/photos/immich/
        globalMounts:
          - path: *mediaLocation
      external:
        type: nfs
        server: nas.${SECRET_HOME_DOMAIN}
        path: /tank/photos/Plex_Album/
        globalMounts:
          - path: /external-library/
