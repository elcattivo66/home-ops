---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: plex
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: intel-device-plugin-gpu
      namespace: kube-system
    - name: longhorn
      namespace: longhorn-system
  values:
    controllers:
      plex:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 1.40.1.8227-c0dd5a73e@sha256:c8d74539a40530fa9770c6d67f37aef8f3a7b3f30ee353c2cb5685b84ed5b04c
            env:
              TZ: ${TZ}
            resources:
              requests:
                gpu.intel.com/i915: 1
                cpu: 258m
                memory: 3443Mi
              limits:
                gpu.intel.com/i915: 1
                memory: 3443Mi
        pod:
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 1
                  preference:
                    matchExpressions:
                      - key: kubernetes.io/hostname
                        operator: In
                        values: ["nuc", "morefine"]
          nodeSelector:
            intel.feature.node.kubernetes.io/gpu: "true"
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [44, 105]
        statefulset:
          volumeClaimTemplates:
            - name: config
              accessMode: ReadWriteOnce
              size: 100Gi
              storageClass: longhorn
              globalMounts:
                - path: /config
    service:
      app:
        controller: plex
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: ${SVC_PLEX_ADDR}
        ports:
          http:
            port: 32400
    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      transcode:
        type: emptyDir
        globalMounts:
          - path: /transcode
      media:
        type: nfs
        server: nas.${SECRET_HOME_DOMAIN}
        path: /tank/media
        globalMounts:
          - path: /media
            readOnly: true
