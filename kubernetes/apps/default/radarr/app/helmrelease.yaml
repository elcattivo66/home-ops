---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: radarr
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5

  values:
    initContainers:
      01-init-db:
        image: ghcr.io/onedr0p/postgres-init:14.9
        imagePullPolicy: IfNotPresent
        envFrom:
          - secretRef:
              name: radarr-secret
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"

    image:
      repository: ghcr.io/onedr0p/radarr-develop
      pullPolicy: IfNotPresent
      tag: 5.0.3.8127@sha256:0a15fe61a0b76e8c4b04f5327285d6d0b72476e5fcf05163a6d5111f70d69b74

    env:
      TZ: "${TZ}"
      PUID: "1000"
      PGID: "1000"
      RADARR__LOG_LEVEL: info
      RADARR__API_KEY: ${RADARR_API_KEY}
      RADARR__THEME: dark
      RADARR__AUTHENTICATION_METHOD: External
      RADARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses

    envFrom:
      - secretRef:
          name: radarr-secret
    service:
      main:
        ports:
          http:
            port: 7878

    ingress:
      main:
        enabled: true
        primary: true
        ingressClassName: traefik
        annotations:
          external-dns.alpha.kubernetes.io/target: ipv4.${SECRET_DOMAIN}
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: >-
            networking-headers@kubernetescrd,
            networking-authelia@kubernetescrd
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: ${SECRET_CERT_NAME}-prod-tls

    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 5Gi
        storageClass: longhorn

    persistence:
      media:
        enabled: true
        type: nfs
        server: ${NAS_ADDR}
        path: ${MEDIADIR}
        mountPath: /media

    podSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
      supplementalGroups:
        - 5600

    resources:
      requests:
        cpu: 5m
        memory: 480M
      limits:
        memory: 480M
