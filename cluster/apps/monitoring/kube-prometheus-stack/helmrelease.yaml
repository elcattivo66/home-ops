---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 39.11.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    kube-state-metrics:
      metricLabelsAllowlist:
        - "persistentvolumeclaims=[*]"
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
    grafana:
      enabled: false
      forceDeployDashboards: true
      sidecar:
        dashboards:
          multicluster:
            etcd:
              enabled: true
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          - action: replace
            sourceLabels:
              - node
            targetLabel: instance
    kubeApiServer:
      enabled: true
    kubeControllerManager:
      enabled: true
      endpoints:
        - 192.168.178.21
        # - 192.168.178.94
        # - 192.168.178.48
    kubeScheduler:
      enabled: true
      endpoints:
        - 192.168.178.21
        # - 192.168.178.94
        # - 192.168.178.48
    kubeProxy:
      enabled: true
      endpoints:
        - 192.168.178.21
        # - 192.168.178.94
        # - 192.168.178.48
    kubeEtcd:
      enabled: true
      endpoints:
        - 192.168.178.21
        # - 192.168.178.94
        # - 192.168.178.48
      service:
        enabled: true
        port: 2381
        targetPort: 2381
    prometheus:
      prometheusSpec:
        replicas: 2
        replicaExternalLabelName: __replica__
        externalLabels:
          cluster: home-ops
        podAntiAffinity: hard
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        retention: 14d
        retentionSize: 9GB
        enableAdminAPI: true
        walCompression: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: "longhorn"
              resources:
                requests:
                  storage: 10Gi
        # resources:
        #   requests:
        #     cpu: 10m
        #     memory: 2000Mi
        #   limits:
        #     memory: 8000Mi
        # additionalScrapeConfigs:
        #   - job_name: coredns
        #     scrape_interval: 1m
        #     scrape_timeout: 10s
        #     honor_timestamps: true
        #     static_configs:
        #       - targets:
        #           - "opnsense.${SECRET_PRIVATE_DOMAIN}:9153"
        #   - job_name: frr-exporter
        #     scrape_interval: 1m
        #     scrape_timeout: 10s
        #     honor_timestamps: true
        #     static_configs:
        #       - targets:
        #           - "opnsense.${SECRET_PRIVATE_DOMAIN}:9342"
        #   - job_name: node-exporter
        #     scrape_interval: 1m
        #     scrape_timeout: 10s
        #     honor_timestamps: true
        #     static_configs:
        #       - targets:
        #           - "opnsense.${SECRET_PRIVATE_DOMAIN}:9100"
        #           - "expanse.${SECRET_PRIVATE_DOMAIN}:9100"
        #   - job_name: pikvm
        #     scrape_interval: 1m
        #     scrape_timeout: 10s
        #     metrics_path: /api/export/prometheus/metrics
        #     basic_auth:
        #       username: "${SECRET_PIKVM_USERNAME}"
        #       password: "${SECRET_PIKVM_PASSWORD}"
        #     honor_timestamps: true
        #     static_configs:
        #       - targets:
        #           - "pikvm.${SECRET_PRIVATE_DOMAIN}"