---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres
  annotations:
    cnpg.io/skipEmptyWalArchiveCheck: 'enabled'
spec:
  instances: 3
  # renovate: datasource=docker depName=ghcr.io/cloudnative-pg/postgresql repository=ghcr.io
  imageName: ghcr.io/cloudnative-pg/postgresql:18.0-standard-trixie@sha256:e49b9c7942d794dea5979a1b9ca2e4bff418ee96e060f67660150b05ea169e28
  storage:
    size: 15Gi
    storageClass: openebs-hostpath
  superuserSecret:
    name: cloudnative-pg-secret
  enableSuperuserAccess: true
  primaryUpdateStrategy: unsupervised
  primaryUpdateMethod: switchover
  postgresql:
    parameters:
      max_connections: "600"
      shared_buffers: 512MB
    extensions:
      - name: vchord
        image:
          reference: ghcr.io/tensorchord/vchord-scratch:pg18-v0.5.3@sha256:c310ede47f7f82bd257c3e53806d60680d5899c318ca946fb313efad9a90a78e
        dynamic_library_path:
          - /usr/lib/postgresql/18/lib
        extension_control_path:
          - /usr/share/postgresql/18/
    # shared_preload_libraries:
    #   - "vchord"
  resources:
    requests:
      cpu: 250m
      memory: 2Gi
    limits:
      memory: 4Gi
  monitoring:
    enablePodMonitor: true
  plugins:
    - name: barman-cloud.cloudnative-pg.io
      isWALArchiver: true
      parameters: &parameters
        barmanObjectName: postgres
        serverName: postgres-v1
  # Note: Bootstrap is needed when recovering from an existing cnpg cluster
  bootstrap:
    recovery:
      source: source
  externalClusters:
    - name: source
      plugin:
        name: barman-cloud.cloudnative-pg.io
        parameters: *parameters
