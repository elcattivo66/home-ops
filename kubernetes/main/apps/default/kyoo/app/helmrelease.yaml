---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app kyoo
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      back:
        replicas: 1
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          01-init-db:
            envFrom:
              - secretRef:
                  name: kyoo-secret
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.2
          02-migrations:
            envFrom:
              - secretRef:
                  name: kyoo-secret
            image:
              repository: ghcr.io/zoriya/kyoo_migrations
              tag: master@sha256:a2462292eafb6d7eb367726521c918ef1b3ee1d5ed802297071d69ccd801582a
        containers:
          app:
            image:
              repository: ghcr.io/zoriya/kyoo_back
              tag: master@sha256:acca2e2a7420fbd1e87b2001799b173f00e525c569ac197fbcf803f380c30d2e
            env:
              TRANSCODER_URL: http://kyoo-transcoder.default.svc.cluster.local:7666
              MEILI_HOST: http://kyoo-meilisearch.default.svc.cluster.local:7700
              OIDC_AUTHELIA_NAME: Authelia
              OIDC_AUTHELIA_LOGO: https://www.authelia.com/images/branding/logo-cropped.png
              OIDC_AUTHELIA_CLIENTID: kyoo
              OIDC_AUTHELIA_AUTHORIZATION: https://authelia.${SECRET_DOMAIN}/api/oidc/authorization
              OIDC_AUTHELIA_TOKEN: https://authelia.${SECRET_DOMAIN}/api/oidc/token
              OIDC_AUTHELIA_PROFILE: https://authelia.${SECRET_DOMAIN}/api/oidc/userinfo
              OIDC_AUTHELIA_SCOPE: "openid profile groups email"
            envFrom: &envFrom
              - secretRef:
                  name: kyoo-secret
              - configMapRef:
                  name: kyoo-config
            resources:
              requests:
                cpu: 10m
                memory: 512Mi
              limits:
                cpu: 2000m
                memory: 5Gi
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
        pod: &pod
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch

      front:
        replicas: 1
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/zoriya/kyoo_front
              tag: master@sha256:f32a063935cf16081e72fa7d05c1058eb69f5f8c8d73f07c6dc098686f994c1d
            env:
              KYOO_URL: http://kyoo-back.default.svc.cluster.local:5000
            resources:
              requests:
                cpu: 5m
                memory: 100Mi
              limits:
                memory: 1Gi
            securityContext: *securityContext
        pod: *pod

      scanner:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/zoriya/kyoo_scanner
              tag: master@sha256:32e6bf3177d34aa09222a5e1d05eda93ab4ed63422d4471ba3c1a0880fcce667
            args: ["scanner"]
            env:
              KYOO_URL: http://kyoo-back.default.svc.cluster.local:5000
              SCANNER_LIBRARY_ROOT: /media
            envFrom: *envFrom
            resources:
              requests:
                cpu: 5m
                memory: 356Mi
              limits:
                memory: 1Gi
            securityContext: *securityContext
        pod: *pod

      matcher:
        replicas: 1
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/zoriya/kyoo_scanner
              tag: master@sha256:32e6bf3177d34aa09222a5e1d05eda93ab4ed63422d4471ba3c1a0880fcce667
            args: ["matcher"]
            env:
              KYOO_URL: http://kyoo-back.default.svc.cluster.local:5000
            envFrom: *envFrom
            resources:
              requests:
                cpu: 5m
                memory: 356Mi
              limits:
                memory: 356Mi
            securityContext: *securityContext
        pod: *pod

      autosync:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/zoriya/kyoo_autosync
              tag: master@sha256:84b39928a1e811e2e43f61d5fa5e3cb547c712f3f9cc650f67d48cca0e524204
            env:
              RABBITMQ_DEFAULT_PASS:
                valueFrom:
                  secretKeyRef:
                    name: kyoo-secret
                    key: RABBITMQ_DEFAULT_PASS
            envFrom:
              - configMapRef:
                  name: kyoo-config
            resources:
              requests:
                cpu: 5m
                memory: 100Mi
              limits:
                memory: 100Mi
            securityContext: *securityContext
        pod: *pod

      meilisearch:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: docker.io/getmeili/meilisearch
              tag: v1.4
            env:
              MEILI_ENV: production
              MEILI_NO_ANALYTICS: true
              MEILI_MASTER_KEY:
                valueFrom:
                  secretKeyRef:
                    name: kyoo-secret
                    key: MEILI_MASTER_KEY
            resources:
              requests:
                cpu: 5m
                memory: 356Mi
              limits:
                memory: 356Mi
            securityContext: *securityContext
        pod: *pod

      rabbitmq:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: docker.io/rabbitmq
              tag: 3-alpine
            env:
              RABBITMQ_DEFAULT_PASS:
                valueFrom:
                  secretKeyRef:
                    name: kyoo-secret
                    key: RABBITMQ_DEFAULT_PASS
            envFrom:
              - configMapRef:
                  name: kyoo-config
            resources:
              requests:
                cpu: 5m
                memory: 300Mi
              limits:
                memory: 300Mi
            securityContext: *securityContext
        pod: *pod

      transcoder:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/zoriya/kyoo_transcoder
              tag: master@sha256:5e535040453c81034aa0f3365546d9f0f8934c4c14db8c6ac319ed2a2172b984
            env:
              GOCODER_HWACCEL: vaapi
              GOCODER_PRESET: fast
              GOCODER_VAAPI_RENDERER: /dev/dri/renderD128
            envFrom:
              - configMapRef:
                  name: kyoo-config
            resources:
              requests:
                gpu.intel.com/i915: 1
                cpu: 10m
                memory: 512Mi
              limits:
                gpu.intel.com/i915: 1
                memory: 4Gi
            securityContext: *securityContext
        pod:
          nodeSelector:
            intel.feature.node.kubernetes.io/gpu: "true"
          securityContext:
            runAsUser: 1000
            runAsNonRoot: true
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [44, 105]

    service:
      back:
        controller: back
        ports:
          http:
            port: 5000
      front:
        controller: front
        ports:
          http:
            port: 8901
      rabbitmq:
        controller: rabbitmq
        ports:
          http:
            port: 5672
      meilisearch:
        controller: meilisearch
        ports:
          http:
            port: 7700
      transcoder:
        controller: transcoder
        ports:
          http:
            port: 7666

    ingress:
      main:
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/configuration-snippet: |
            rewrite /api/(.*) /$1 break;
          nignx.ingress.kubernetes.io/force-ssl-redirect: "true"
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
        hosts:
          - host: &host kyoo.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: front
                  port: http
              - path: /api
                pathType: Prefix
                service:
                  identifier: back
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      search:
        existingClaim: kyoo-meilisearch
        advancedMounts:
          meilisearch:
            app:
              - path: /meili_data
      transcoder-metadata:
        existingClaim: kyoo-transcoder-metadata
        advancedMounts:
          transcoder:
            app:
              - path: /metadata
      cache:
        type: emptyDir
        advancedMounts:
          transcoder:
            app:
              - path: /cache
      backend-metadata:
        existingClaim: kyoo-backend-metadata
        advancedMounts:
          back:
            app:
              - path: /metadata
      media:
        type: nfs
        server: nas.${SECRET_HOME_DOMAIN}
        path: /tank/media/
        globalMounts:
          - path: /media
            readOnly: true
