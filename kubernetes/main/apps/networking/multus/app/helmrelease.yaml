---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: multus
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  dependsOn:
    - name: cilium
      namespace: kube-system
  values:
    configMaps:
      daemon-config:
        data:
          daemon-config.json: |
            {
              "cniVersion": "0.3.1",
              "logToStderr": true,
              "binDir": "/var/lib/rancher/k3s/data/cni",
              "chrootDir": "/hostroot",
              "confDir": "/host/etc/cni/net.d",
              "cniConfigDir": "/host/etc/cni/net.d",
              "multusAutoconfigDir": "/host/etc/cni/net.d",
              "multusConfigFile": "auto",
              "socketDir": "/host/run/multus/"
            }
    controllers:
      multus:
        type: daemonset
        pod:
          hostNetwork: true
          hostPID: true
          terminationGracePeriodSeconds: 10
        containers:
          multus-daemon:
            image: &multus-cni-image
              repository: ghcr.io/k8snetworkplumbingwg/multus-cni
              tag: v4.1.3-thick
            env:
              MULTUS_NODE_NAME:
                valueFrom:
                  fieldRef:
                    fieldPath: spec.nodeName
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi
            securityContext:
              privileged: true
        initContainers:
          cni-plugins-installer:
            image: &hardened-cni-plugins-image
              repository: docker.io/rancher/hardened-cni-plugins
              tag: v1.5.1-build20241009   # Current version used in k3s v1.31.2+k3s1
            env:
              - name: SKIP_CNI_BINARIES
                value: "bandwidth,bridge,firewall,flannel,host-device,host-local,ipvlan,loopback,portmap,ptp,sbr,vlan,vrf" # macvlan,tuning
              - name: UPDATE_CNI_BINARIES
                value: "true"
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 15Mi
            securityContext:
              capabilities:
                drop:
                - ALL
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: FallbackToLogsOnError
          multus-shim-installer:
            image: *multus-cni-image
            command: ["/bin/sh","-c"]
            args: |
              set -x
              if [ "$(sha256sum /host/opt/cni/bin/multus-shim)" != "$(sha256sum /usr/src/multus-cni/bin/multus-shim)" ]; then
                rm -f /host/opt/cni/bin/multus-shim
                cp /usr/src/multus-cni/bin/multus-shim /host/opt/cni/bin/multus-shim
              fi
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 15Mi
            securityContext:
              capabilities:
                drop:
                - ALL
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: FallbackToLogsOnError
      preload-images:
        type: job
        annotations:
          helm.sh/hook: pre-install,pre-upgrade
        job:
          ttlSecondsAfterFinished: 600
        containers:
          cni-plugins-installer:
            image: *hardened-cni-plugins-image
            command: ['/bin/true']
          multus-shim-installer:
            image: *multus-cni-image
            command: ['/bin/true']
        serviceAccount:
          name: default
    defaultPod:
      tolerations:
        - operator: Exists
          effect: NoSchedule
        - operator: Exists
          effect: NoExecute
    persistence:
      cni:
        type: hostPath
        hostPath: /var/lib/rancher/k3s/agent/etc/cni/net.d
        advancedMounts:
          multus:
            multus-daemon:
              - path: /host/etc/cni/net.d
      cnibin:
        type: hostPath
        hostPath: /var/lib/rancher/k3s/data/cni
        advancedMounts:
          multus:
            cni-plugins-installer:
              - path: /host/opt/cni/bin
            multus-shim-installer:
              - path: /host/opt/cni/bin
            multus-daemon:
              # multus-daemon expects that cnibin path must be identical between pod and container host.
              # e.g. if the cni bin is in '/opt/cni/bin' on the container host side, then it should be
              # mount to '/opt/cni/bin' in multus-daemon, not to any other directory, like '/opt/bin' or
              # '/usr/bin'.
              - path: /var/lib/rancher/k3s/data/cni
      config:
        type: configMap
        name: multus-daemon-config
        advancedMounts:
          multus:
            multus-daemon:
              - path: /etc/cni/net.d/multus.d
      hostroot:
        type: hostPath
        hostPath: /
        advancedMounts:
          multus:
            multus-daemon:
              - path: /hostroot
                mountPropagation: HostToContainer
      host-run:
        type: hostPath
        hostPath: /run
        advancedMounts:
          multus:
            multus-daemon:
              - path: /host/run
      host-var-lib-cni-multus:
        type: hostPath
        hostPath: /var/lib/cni/multus
        advancedMounts:
          multus:
            multus-daemon:
              - path: /var/lib/cni/multus
      host-var-lib-kubelet:
        type: hostPath
        hostPath: /var/lib/kubelet
        advancedMounts:
          multus:
            multus-daemon:
              - path: /var/lib/kubelet
      host-run-k8s-cni-cncf-io:
        type: hostPath
        hostPath: /run/k8s.cni.cncf.io
        advancedMounts:
          multus:
            multus-daemon:
              - path: /run/k8s.cni.cncf.io
      host-run-netns:
        type: hostPath
        hostPath: /run/netns/
        advancedMounts:
          multus:
            multus-daemon:
              - path: /run/netns/
                mountPropagation: HostToContainer
    serviceAccount:
      create: true
