---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: tdarr
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    image:
      repository: haveagitgat/tdarr
      tag: 2.00.20
    env:
      webUIPort: &web-port 8265
      serverIP: 0.0.0.0
      serverPort: &server-port 8266
      TZ: ${TZ}
      ffmpegPath: /usr/bin/ffmpeg
      PGID: 1000
      PUID: 1000

    additionalContainers:
      node:
        name: node
        image: haveagitgat/tdarr_node:2.00.20
        env:
          - name: TZ
            value: ${TZ}
          - name: nodeID
            value: node
          - name: serverIP
            value: localhost
          - name: serverPort
            value: *server-port
          - name: PUID
            value: 1000
          - name: PGID
            value: 1000
        volumeMounts:
          - name: config
            mountPath: /app/configs
          - name: media
            mountPath: /media
          - name: shared
            mountPath: /shared
    podSecurityContext:
      supplementalGroups:
        - 985
        - 989
        - 44
        - 109
    resources:
      requests:
        gpu.intel.com/i915: 1
      limits:
        gpu.intel.com/i915: 1

    persistence:
      config:
        enabled: true
        existingClaim: tdarr-config-v1
        subPath:
          - path: tdarr/config
            mountPath: /app/configs
          - path: tdarr/data
            mountPath: /app/server
      media:
        enabled: true
        type: nfs
        server: ${NAS_ADDR}
        path: ${MEDIADIR}
        mountPath: /media
        readOnly: false
      # Transcode dir
      shared:
        enabled: true
        type: emptyDir
        mountPath: /shared

    service:
      main:
        ports:
          http:
            port: *web-port
          server:
            enabled: true
            protocol: TCP
            port: *server-port

    ingress:
      main:
        enabled: true
        primary: true
        ingressClassName: traefik
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: >-
            networking-headers@kubernetescrd,
            networking-local-only@kubernetescrd
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: ${SECRET_CERT_NAME}-prod-tls
