---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres16
  annotations:
    cnpg.io/skipEmptyWalArchiveCheck: 'enabled'
spec:
  instances: 2
  imageName: ghcr.io/cloudnative-pg/postgresql:17.5-1
  storage:
    size: 15Gi
    storageClass: openebs-hostpath
  superuserSecret:
    name: cloudnative-pg-secret
  enableSuperuserAccess: true
  primaryUpdateMethod: switchover
  # Note: Bootstrap is needed when recovering from an existing cnpg cluster
  # bootstrap:
  #   recovery:
  #     source: &previousCluster postgres16-v9
  postgresql:
    # shared_preload_libraries: ["vectors.so"]
    parameters:
      max_connections: "600"
      max_slot_wal_keep_size: 10GB
      shared_buffers: 512MB
  nodeMaintenanceWindow:
    inProgress: false
    reusePVC: true
  resources:
    requests:
      cpu: 250m
      memory: 2Gi
    limits:
      memory: 4Gi
  monitoring:
    enablePodMonitor: true
  # plugins:
  # - name: barman-cloud.cloudnative-pg.io
  #   isWALArchiver: true
  #   parameters:
  #     barmanObjectName: postgres
  #     serverName: postgres16-v1

  # externalClusters:
  # - name: *previousCluster
  #   plugin:
  #     name: barman-cloud.cloudnative-pg.io
  #     parameters:
  #       barmanObjectName: postgres
  #       serverName: *previousCluster
