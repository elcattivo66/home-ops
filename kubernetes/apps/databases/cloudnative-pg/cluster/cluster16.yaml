---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres16
spec:
  instances: 2
  imageName: ghcr.io/cloudnative-pg/postgresql:16.6-7
  storage:
    size: 15Gi
    storageClass: openebs-hostpath
  superuserSecret:
    name: cloudnative-pg-secret
  enableSuperuserAccess: true
  primaryUpdateMethod: switchover
  # Note: Bootstrap is needed when recovering from an existing cnpg cluster
  bootstrap:
    recovery:
      source: &previousCluster postgres16-v9
  postgresql:
    # shared_preload_libraries: ["vectors.so"]
    parameters:
      max_connections: "600"
      max_slot_wal_keep_size: 10GB
      shared_buffers: 512MB
  nodeMaintenanceWindow:
    inProgress: false
    reusePVC: true
  resources:
    requests:
      cpu: 250m
      memory: 2Gi
    limits:
      memory: 4Gi
  monitoring:
    enablePodMonitor: true
  backup:
    retentionPolicy: 30d
    barmanObjectStore:
      data:
        compression: bzip2
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://postgresql/
      endpointURL: https://s3.${SECRET_HOME_DOMAIN}
      serverName: postgres16-v10
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-secret
          key: MINIO_ACCESS_KEY
        secretAccessKey:
          name: cloudnative-pg-secret
          key: MINIO_SECRET_KEY

  externalClusters:
    - name: *previousCluster
      barmanObjectStore:
        wal:
          compression: bzip2
          maxParallel: 8
        destinationPath: s3://postgresql/
        endpointURL: https://s3.${SECRET_HOME_DOMAIN}
        s3Credentials:
          accessKeyId:
            name: cloudnative-pg-secret
            key: MINIO_ACCESS_KEY
          secretAccessKey:
            name: cloudnative-pg-secret
            key: MINIO_SECRET_KEY
