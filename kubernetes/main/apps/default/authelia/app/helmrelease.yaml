---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app authelia
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5

  values:
    controllers:
      main:
        replicas: 2
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: 'true'
        initContainers:
          01-init-db:
            envFrom:
              - secretRef:
                  name: authelia-secret
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: '16.1'
        containers:
          main:
            image:
              repository: ghcr.io/authelia/authelia
              tag: 4.37.5
            envFrom:
              - secretRef:
                  name: authelia-secret
            env:
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ADDITIONAL_USERS_DN: ou=people
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_BASE_DN: dc=${SECRET_CERT_NAME},dc=de
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_DISPLAY_NAME_ATTRIBUTE: displayName
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ADDITIONAL_GROUPS_DN: ou=groups
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_GROUPS_FILTER: (member={dn})
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_GROUP_NAME_ATTRIBUTE: cn
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_MAIL_ATTRIBUTE: mail
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_URL: ldap://lldap.default.svc.cluster.local:3890
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_USER: uid=admin,ou=people,dc=${SECRET_CERT_NAME},dc=de
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_USERNAME_ATTRIBUTE: uid
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_USERS_FILTER: (&({username_attribute}={input})(objectClass=person))
              AUTHELIA_AUTHENTICATION_BACKEND_PASSWORD_RESET_DISABLE: 'false'
              AUTHELIA_DEFAULT_REDIRECTION_URL: https://authelia.${SECRET_DOMAIN}
              AUTHELIA_DUO_API_DISABLE: 'true'
              AUTHELIA_LOG_LEVEL: info
              AUTHELIA_NOTIFIER_SMTP_DISABLE_REQUIRE_TLS: 'true'
              AUTHELIA_NOTIFIER_SMTP_HOST: smtp-relay.default.svc.cluster.local
              AUTHELIA_NOTIFIER_SMTP_PORT: 2525
              AUTHELIA_NOTIFIER_SMTP_SENDER: Authelia <${SECRET_SMTP_SENDER}>
              AUTHELIA_SERVER_DISABLE_HEALTHCHECK: 'true'
              AUTHELIA_SERVER_PORT: 9091
              AUTHELIA_SESSION_DOMAIN: ${SECRET_DOMAIN}
              AUTHELIA_SESSION_REDIS_PORT: 6379
              AUTHELIA_SESSION_REDIS_HOST: redis-master.databases.svc.cluster.local
              AUTHELIA_SESSION_REDIS_DATABASE_INDEX: 14
              AUTHELIA_STORAGE_POSTGRES_DATABASE: authelia
              AUTHELIA_STORAGE_POSTGRES_HOST: postgres16-rw.databases.svc.cluster.local
              AUTHELIA_TELEMETRY_METRICS_ADDRESS: tcp://0.0.0.0:8080
              AUTHELIA_TELEMETRY_METRICS_ENABLED: 'true'
              AUTHELIA_THEME: auto
              AUTHELIA_TOTP_ISSUER: authelia.com
              AUTHELIA_WEBAUTHN_DISABLE: 'false'

            resources:
              requests:
                cpu: 10m
                memory: 100Mi
              limits:
                memory: 100Mi
        pod:
          enableServiceLinks: false
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: &app authelia
    service:
      main:
        ports:
          http:
            port: 9091
          metrics:
            enabled: true
            port: 8080
    serviceMonitor:
      main:
        enabled: true
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    ingress:
      main:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          nginx.ingress.kubernetes.io/configuration-snippet: |
            add_header Cache-Control "no-store";
            add_header Pragma "no-cache";
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-XSS-Protection "1; mode=block";
        hosts:
          - host: &host '{{ .Release.Name }}.${SECRET_DOMAIN}'
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      config:
        enabled: true
        type: configMap
        name: authelia-configmap
        globalMounts:
          - path: /config/configuration.yaml
            subPath: configuration.yaml
            readOnly: true

