apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: paperless
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  values:
    initContainers:
      01-init-db:
        image: ghcr.io/onedr0p/postgres-init:14.9
        imagePullPolicy: IfNotPresent
        envFrom:
          - secretRef:
              name: paperless-secret
    image:
      repository: ghcr.io/paperless-ngx/paperless-ngx
      tag: 1.17.4
    env:
      COMPOSE_PROJECT_NAME: paperless
      PAPERLESS_CONSUMER_POLLING: "60"
      PAPERLESS_CONSUMER_RECURSIVE: "true"
      PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
      PAPERLESS_OCR_LANGUAGES: deu
      PAPERLESS_OCR_LANGUAGE: deu
      PAPERLESS_PORT: 8000
      PAPERLESS_TASK_WORKERS: 2
      PAPERLESS_TIME_ZONE: ${TZ}
      PAPERLESS_URL: https://paperless.${SECRET_DOMAIN}
      USERMAP_UID: 1000
      USERMAP_GID: 1000
      PAPERLESS_FILENAME_FORMAT: "{created_year}/{correspondent}/{title}"
      PAPERLESS_ENABLE_HTTP_REMOTE_USER: true
      PAPERLESS_DBHOST: postgres-rw.databases.svc.cluster.local
      # PAPERLESS_REDIS: redis://redis-master.databases.svc.cluster.local:6379
      PAPERLESS_REDIS: redis://localhost:6379
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://localhost:3000
      PAPERLESS_TIKA_ENDPOINT: http://localhost:9998
    envFrom:
      - secretRef:
          name: paperless-secret

    service:
      main:
        ports:
          http:
            port: 8000

    ingress:
      main:
        enabled: true
        primary: true
        ingressClassName: traefik
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: >-
            networking-headers@kubernetescrd,
            networking-authelia@kubernetescrd
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: ${SECRET_CERT_NAME}-prod-tls

    persistence:
      data:
        enabled: true
        mountPath: /usr/src/paperless/data
        type: nfs
        server: ${NAS_ADDR}
        path: /spool/paperless/data
      media:
        enabled: true
        mountPath: /usr/src/paperless/media
        type: nfs
        server: ${NAS_ADDR}
        path: /spool/paperless/media
      consume:
        enabled: true
        mountPath: /usr/src/paperless/consume
        type: nfs
        server: ${NAS_ADDR}
        path: /spool/paperless/consume
      export:
        enabled: true
        mountPath: /usr/src/paperless/export
        type: nfs
        server: ${NAS_ADDR}
        path: /spool/paperless/export

    sidecars:
      redis:
        name: redis
        image: public.ecr.aws/docker/library/redis:7.2.2
        imagePullPolicy: IfNotPresent
      gotenburg:
        name: gotenburg
        image: thecodingmachine/gotenberg:7.9.2
        env:
          - name: DISABLE_GOOGLE_CHROME
            value: '1'
      tika:
        image: ghcr.io/paperless-ngx/tika:2.9.0-full
        name: tika
        imagePullPolicy: Always

    resources:
        requests:
            cpu: 5m
            memory: 697M
        limits:
            memory: 697M
